apiVersion: v1
kind: Service
metadata:
  name: forgejo
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: forgejo
  ports:
    - name: http
      port: 80
      targetPort: 3001
    - name: http-plain
      port: 3000
      targetPort: 3000
    - name: metrics-anubis
      port: 9090
      targetPort: 9090

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: forgejo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 16Gi

---
# environment ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: forgejo-env
data:
  FORGEJO__actions__ENABLED: "false"
  FORGEJO__database__DB_TYPE: postgres
  FORGEJO__database__HOST: postgresql
  FORGEJO__database__NAME: forgejo
  FORGEJO__database__USER: forgejo
  FORGEJO__server__DISABLE_SSH: "true"
  FORGEJO__server__LANDING_PAGE: explore
  FORGEJO__security__INSTALL_LOCK: "true"
  FORGEJO__other__SHOW_FOOTER_VERSION: "false"
  FORGEJO__service__DISABLE_REGISTRATION: "false"
  FORGEJO__service__ALLOW_ONLY_EXTERNAL_REGISTRATION: "true"
  FORGEJO__repository__MAX_CREATION_LIMIT: "0"
  FORGEJO__service__DEFAULT_ALLOW_CREATE_ORGANIZATION: "false"
  FORGEJO__service__DEFAULT_KEEP_EMAIL_PRIVATE: "true"
  FORGEJO__service__DEFAULT_USER_VISIBILITY: private
  FORGEJO__server__ROOT_URL: https://git.sapphiccode.net
  FORGEJO__server__OFFLINE_MODE: "false"
  FORGEJO__server__LFS_START_SERVER: "true"

---
# StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: forgejo
spec:
  serviceName: forgejo
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: forgejo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: forgejo
    spec:
      containers:
        - name: forgejo
          image: codeberg.org/forgejo/forgejo:10-rootless
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: forgejo-data
              mountPath: /var/lib/gitea
          envFrom:
            - configMapRef:
                name: forgejo-env
          env:
            - name: FORGEJO__database__PASSWD
              valueFrom:
                secretKeyRef:
                  name: forgejo-env
                  key: db-password

        - name: anubis
          image: ghcr.io/xe/x/anubis:latest
          imagePullPolicy: Always
          env:
            - name: "BIND"
              value: ":3001"
            - name: "DIFFICULTY"
              value: "4"
            - name: "METRICS_BIND"
              value: ":9090"
            - name: "SERVE_ROBOTS_TXT"
              value: "false"
            - name: "TARGET"
              value: "http://localhost:3000"
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 3001
            - containerPort: 9090

      volumes:
        - name: forgejo-data
          persistentVolumeClaim:
            claimName: forgejo-data

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: forgejo
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`git.sapphiccode.net`)
      services:
        - name: forgejo
          port: 80
  tls:
    certResolver: cloudflare
    domains:
      - main: "*.sapphiccode.net"
