apiVersion: v1
kind: Namespace
metadata:
  name: phoenix-jenkins

---

apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: phoenix-jenkins
spec:
  selector:
    app.kubernetes.io/name: jenkins
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8081
    - name: agent
      protocol: TCP
      port: 50000
      targetPort: 50000

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-data
  namespace: phoenix-jenkins
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 16Gi

---

# RBAC for builds:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: phoenix-jenkins

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jenkins
  namespace: phoenix-jenkins
rules:
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["*"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins
  namespace: phoenix-jenkins
subjects:
  - kind: ServiceAccount
    name: jenkins
roleRef:
  kind: Role
  name: jenkins
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: restrict-ci
  namespace: phoenix-jenkins
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    # allow comms with jenkins
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: phoenix-jenkins
          podSelector:
            matchLabels:
              app.kubernetes.io/name: jenkins
      ports:
        - protocol: TCP
          port: 8081
        - protocol: TCP
          port: 50000

    # allow DNS
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53

    # allow internet access
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 192.168.0.0/16
              - 172.16.0.0/20
              - 100.64.0.0/10

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  namespace: phoenix-jenkins
spec:
  serviceName: jenkins
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jenkins
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jenkins
    spec:
      serviceAccountName: jenkins
      containers:
        - name: jenkins
          image: docker.io/jenkins/jenkins:latest
          ports:
            - containerPort: 8080
            - containerPort: 50000
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home
        - name: anubis
          image: ghcr.io/xe/x/anubis:latest
          imagePullPolicy: Always
          env:
            - name: "BIND"
              value: ":8081"
            - name: "DIFFICULTY"
              value: "4"
            - name: "METRICS_BIND"
              value: ":9090"
            - name: "SERVE_ROBOTS_TXT"
              value: "true"
            - name: "TARGET"
              value: "http://localhost:8080"
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8081
            - containerPort: 9090
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-data

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: jenkins
  namespace: phoenix-jenkins
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`jci.sapphiccode.net`)
      kind: Rule
      services:
        - name: jenkins
          port: 80
  tls:
    certResolver: cloudflare
    domains:
      - main: "*.sapphiccode.net"
